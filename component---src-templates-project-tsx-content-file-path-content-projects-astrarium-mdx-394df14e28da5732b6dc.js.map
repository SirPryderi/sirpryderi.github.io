{"version":3,"file":"component---src-templates-project-tsx-content-file-path-content-projects-astrarium-mdx-394df14e28da5732b6dc.js","mappings":"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","sources":["webpack://sirpryderi.github.io/./content/projects/astrarium.mdx","webpack://sirpryderi.github.io/./src/templates/Project.tsx","webpack://sirpryderi.github.io/./src/components/ExternalLink.tsx","webpack://sirpryderi.github.io/./src/components/Article.tsx","webpack://sirpryderi.github.io/./src/components/Breadcrumbs.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {ExternalLink} = _components;\n  if (!ExternalLink) _missingMdxReference(\"ExternalLink\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"A Java application capable of calculating orbits, and launch windows to\\nexecute transfers between them.\"), \"\\n\", React.createElement(_components.p, null, \"The program features a 2D preview of the transfer, shown as a map of the Solar system, focusing on a clear UX.\"), \"\\n\", React.createElement(ExternalLink, {\n    text: \"GitHub Page\",\n    href: \"https://github.com/SirPryderi/Astrarium\",\n    icon: \"github\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/sirpryderi.github.io/sirpryderi.github.io/content/projects/astrarium.mdx\";\nimport React from \"react\";\nimport Article, {ArticleMdx, ArticleTitle} from \"../components/Article\";\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport Layout from \"../components/Layout\";\nimport LayoutHead from \"../components/LayoutHead\";\nfunction GameTemplate(_ref) {\n  var _document$fields, _document$frontmatter, _document$fields2;\n  let {data, children, location} = _ref;\n  const document = data.mdx;\n  if (!document) return;\n  const slug = (_document$fields = document.fields) === null || _document$fields === void 0 ? void 0 : _document$fields.slug;\n  const title = ((_document$frontmatter = document.frontmatter) === null || _document$frontmatter === void 0 ? void 0 : _document$frontmatter.name) || \"UNTITLED\";\n  const type = ((_document$fields2 = document.fields) === null || _document$fields2 === void 0 ? void 0 : _document$fields2.type) || \"UNCATEGORISED\";\n  const breadcrumbItems = [{\n    title: \"home\",\n    url: \"/\"\n  }, {\n    title: type,\n    url: \"/#\" + type\n  }, {\n    title: slug || \"untitled\",\n    url: location.pathname\n  }];\n  return React.createElement(Layout, null, React.createElement(Article, null, React.createElement(Breadcrumbs, {\n    items: breadcrumbItems\n  }), React.createElement(ArticleTitle, null, title), React.createElement(ArticleMdx, null, children)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(GameTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"2006174334\";\nexport const Head = LayoutHead;\n","import React from \"react\"\nimport {\n  faDiscord,\n  faGithub,\n  faGooglePlay,\n  faItchIo,\n} from \"@fortawesome/free-brands-svg-icons\"\nimport { faExternalLink } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport styled from \"styled-components\"\n\nconst StyledLink = styled.a`\n  color: #fff;\n  text-decoration: underline;\n  font-weight: 500;\n  display: inline-flex;\n  align-items: baseline;\n  gap: 0.4em;\n  padding: 0 .25rem;\n\n  &:hover, &:focus {\n    background-color: white;\n    color: #0a0e0c;\n    text-decoration: underline;\n    text-shadow: none;\n  }\n\n  &:active {\n    transform: translateY(2px) translateX(2px);\n  }\n\n  svg {\n    align-self: center;\n  }\n`\n\ntype ExternalLinkProps = {\n  text: string\n  href: string\n  icon?: \"github\" | \"google-play\" | \"discord\" | \"itch-io\" | \"link\"\n}\n\nconst iconMap = {\n  github: faGithub,\n  \"google-play\": faGooglePlay,\n  discord: faDiscord,\n  link: faExternalLink,\n  \"itch-io\": faItchIo\n}\n\nexport const ExternalLinkContainer = styled.div`\n  display: inline-flex;\n  gap: 0.5rem;\n`\n\nconst ExternalLink: React.FC<ExternalLinkProps> = ({\n  text,\n  href,\n  icon = \"link\",\n}) => (\n  <StyledLink href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {icon && iconMap[icon] && <FontAwesomeIcon icon={iconMap[icon]} />}\n    {text}\n  </StyledLink>\n)\n\nexport default ExternalLink\n","import React from \"react\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport styled from \"styled-components\"\nimport ExternalLink, { ExternalLinkContainer } from \"./ExternalLink\"\n\nconst Article = styled.article`\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 4rem 2rem 2rem 2rem;\n  color: white;\n  font-family: \"Oxanium\", sans-serif;\n\n  text-shadow: 0 0px 5px #0a0e0c;\n\n  @media (max-width: 768px) {\n    padding: 2rem 1rem;\n  }\n`\n\nconst shortcodes = { ExternalLink, ExternalLinkContainer }\n\nexport const ArticleTitle = styled.h1`\n  font-size: 3rem;\n  font-weight: 600;\n  margin-bottom: 2rem;\n  letter-spacing: 0.04em;\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`\n\nexport const ArticleMdx = ({ children }: { children: React.ReactNode }) => (\n  <MDXProvider components={shortcodes}>{children}</MDXProvider>\n)\n\nexport default Article\n","// components/Breadcrumbs.tsx\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\ninterface BreadcrumbItem {\n  title: string\n  url: string\n}\n\ninterface BreadcrumbsProps {\n  items: BreadcrumbItem[]\n}\n\nconst BreadcrumbsContainer = styled.nav`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 2rem;\n  font-size: 0.9rem;\n  font-family: monospace;\n  \n  @media (max-width: 768px) {\n    font-size: 0.8rem;\n    margin-bottom: 1.5rem;\n  }\n`\n\nconst BreadcrumbLink = styled(Link)`\n  color: #a0a0a0;\n  text-decoration: none;\n  \n  &:hover {\n    color: white;\n    text-decoration: underline;\n  }\n  \n  &:last-child {\n    color: white;\n    pointer-events: none;\n    \n    &:hover {\n      text-decoration: none;\n    }\n  }\n`\n\nconst Separator = styled.span`\n  color: #666;\n  user-select: none;\n`\n\nexport default function Breadcrumbs({ items }: BreadcrumbsProps) {\n  return (\n    <BreadcrumbsContainer aria-label=\"Breadcrumb\">\n      {items.map((item, index) => (\n        <React.Fragment key={item.url}>\n          <BreadcrumbLink to={item.url}>\n            {item.title}\n          </BreadcrumbLink>\n          {index < items.length - 1 && (\n            <Separator>//</Separator>\n          )}\n        </React.Fragment>\n      ))}\n    </BreadcrumbsContainer>\n  )\n}"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","ExternalLink","id","component","Error","_missingMdxReference","React","text","href","icon","wrapper","MDXLayout","GameTemplate","_ref","_document$fields","_document$frontmatter","_document$fields2","data","children","location","document","mdx","slug","fields","title","frontmatter","name","type","breadcrumbItems","url","pathname","Layout","Article","Breadcrumbs","items","ArticleTitle","ArticleMdx","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","LayoutHead","StyledLink","styled","a","iconMap","github","faGithub","faGooglePlay","discord","faDiscord","link","faExternalLink","faItchIo","ExternalLinkContainer","div","target","rel","FontAwesomeIcon","article","shortcodes","h1","MDXProvider","BreadcrumbsContainer","nav","BreadcrumbLink","Link","Separator","span","map","item","index","key","to","length"],"sourceRoot":""}