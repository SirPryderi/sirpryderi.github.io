{"version":3,"file":"component---src-pages-404-tsx-116c60deb76e94784cfb.js","mappings":"mKAIA,MAAMA,GAAaC,EAAAA,EAAAA,KAAG,8XA2BhBC,EAAeC,EAAAA,QAAOC,OAAM,0EAAbD,CAAa,QAC9BH,GAEEK,GAAaF,EAAAA,EAAAA,SAAOG,EAAAA,MAAK,wEAAZH,CAAY,QAC3BH,GAEEO,EAAeJ,EAAAA,QAAOK,EAAC,0EAARL,CAAQ,QACzBH,GAuCJ,IA7BeS,IAAoD,IAAnD,SAAEC,EAAQ,GAAEC,EAAE,KAAEC,KAASC,GAAoB,EAC3D,OAAIF,EAEAG,EAAAA,cAACT,EAAU,eAACM,GAAIA,GAAQE,GACrBH,GAKHE,EAEAE,EAAAA,cAACP,EAAY,eACXK,KAAMA,EACNG,OAAO,SACPC,IAAI,uBACAH,GAEHH,GAMLI,EAAAA,cAACZ,EAAY,eAACe,KAAK,UAAaJ,GAC7BH,EACY,C,+CCtEnB,MAAMQ,EAAqBJ,EAAAA,MAAW,IAAM,wDAEtCK,EAAOhB,EAAAA,QAAOiB,KAAI,kEAAXjB,CAAW,mDAqBxB,IAhBeM,IAAkD,IAAjD,SAAEC,GAAyC,EACzD,MAAMW,EAA0B,oBAAXC,OAErB,OACER,EAAAA,cAACK,EAAI,KACFT,GAECW,GACAP,EAAAA,cAACA,EAAAA,SAAc,CAACS,SAAUT,EAAAA,cAAAA,MAAAA,OACxBA,EAAAA,cAACI,EAAkB,OAGlB,C,uBCpBX,MAAMM,E,QAAQrB,QAAOsB,QAAO,2DAAdtB,CAAc,yMAOXU,GAAWA,EAAMa,UAAY,QAAU,SAaxD,K,6GCgBA,UAxB0CC,IAEtCb,EAAAA,cAACc,EAAAA,EAAM,KACLd,EAAAA,cAACU,EAAAA,EAAK,CAACE,WAAS,GACdZ,EAAAA,cAAAA,KAAAA,KAAI,4BACJA,EAAAA,cAAAA,IAAAA,KAAG,+CAED,2BAOI,KACJA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAACe,EAAAA,EAAM,CAAClB,GAAG,KAAI,cASlB,MAAMmB,EAAeA,IAAMhB,EAAAA,cAAAA,QAAAA,KAAO,Y","sources":["webpack://sirpryderi.github.io/./src/components/Button.tsx","webpack://sirpryderi.github.io/./src/components/Layout.tsx","webpack://sirpryderi.github.io/./src/components/Slide.tsx","webpack://sirpryderi.github.io/./src/pages/404.tsx"],"sourcesContent":["import React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst baseStyles = css`\n  display: inline-flex;\n  background: none;\n  border: 2px solid white;\n  color: white;\n  cursor: pointer;\n  font-size: 24px;\n  font-family: \"Oxanium\";\n  width: fit-content;\n  padding: 5px 20px;\n  font-weight: 200;\n  position: relative;\n  overflow: hidden;\n  text-decoration: none;\n\n  &:hover, &:focus {\n    background-color: white;\n    color: #0a0e0c;\n    border: 2px solid #0a0e0c;\n    font-weight: 400;\n  }\n\n  &:active {\n    transform: translateY(2px) translateX(2px);\n  }\n`\n\nconst StyledButton = styled.button`\n  ${baseStyles}\n`\nconst StyledLink = styled(Link)`\n  ${baseStyles}\n`\nconst StyledAnchor = styled.a`\n  ${baseStyles}\n`\n\ntype ButtonProps = {\n  children: React.ReactNode\n  to?: string\n  href?: string\n  onClick?: React.MouseEventHandler\n}\n\nconst Button = ({ children, to, href, ...props }: ButtonProps) => {\n  if (to) {\n    return (\n      <StyledLink to={to} {...props}>\n        {children}\n      </StyledLink>\n    )\n  }\n\n  if (href) {\n    return (\n      <StyledAnchor\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        {...props}\n      >\n        {children}\n      </StyledAnchor>\n    )\n  }\n\n  return (\n    <StyledButton role=\"button\" {...props}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default Button\n","import * as React from \"react\"\nimport styled from \"styled-components\"\n\nconst ClientSideOnlyLazy = React.lazy(() => import(\"../cosmos/CosmosScene\"))\n\nconst Main = styled.main`\n  color: white;\n  font-family: \"Oxanium\", sans-serif;\n`\n\nconst Layout = ({ children }: { children: React.ReactNode }) => {\n  const isSSR = typeof window === \"undefined\"\n\n  return (\n    <Main>\n      {children}\n\n      {!isSSR && (\n        <React.Suspense fallback={<div />}>\n          <ClientSideOnlyLazy />\n        </React.Suspense>\n      )}\n    </Main>\n  )\n}\n\nexport default Layout\n","import styled from \"styled-components\"\n\nconst Slide = styled.section<{ $fullSize?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  max-width: 1840px;\n  padding: 40px 200px;\n  margin: 0 auto;\n  justify-content: center;\n  min-height: ${(props) => (props.$fullSize ? \"100vh\" : \"auto\")};\n\n  // responsive breakpoints\n  @media (max-width: 768px) {\n    padding: 40px 20px;\n  }\n\n  h2 {\n    font-size: 4rem;\n    margin: 0;\n  }\n`\n\nexport default Slide\n","import * as React from \"react\"\nimport { HeadFC, PageProps } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Slide from \"../components/Slide\"\nimport Button from \"../components/Button\"\n\nconst codeStyles = {\n  color: \"#8A6534\",\n  padding: 4,\n  backgroundColor: \"#FFF4DB\",\n  fontSize: \"1.25rem\",\n  borderRadius: 4,\n}\n\nconst NotFoundPage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <Slide $fullSize>\n        <h1>// 404 // Page not found</h1>\n        <p>\n          These are not the pages you are looking for.\n          <br />\n          {process.env.NODE_ENV === \"development\" ? (\n            <>\n              <br />\n              Try creating a page in <code style={codeStyles}>src/pages/</code>.\n              <br />\n            </>\n          ) : null}\n          <br />\n          <br />\n          <Button to=\"/\">Go home</Button>\n        </p>\n      </Slide>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const Head: HeadFC = () => <title>Not found</title>\n"],"names":["baseStyles","css","StyledButton","styled","button","StyledLink","Link","StyledAnchor","a","_ref","children","to","href","props","React","target","rel","role","ClientSideOnlyLazy","Main","main","isSSR","window","fallback","Slide","section","$fullSize","NotFoundPage","Layout","Button","Head"],"sourceRoot":""}