{"version":3,"file":"component---src-pages-meeting-tsx-cd86c938b0bb7748c599.js","mappings":"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","sources":["webpack://sirpryderi.github.io/./src/components/ExternalLink.tsx","webpack://sirpryderi.github.io/./src/components/Article.tsx","webpack://sirpryderi.github.io/./src/components/Breadcrumbs.tsx","webpack://sirpryderi.github.io/./src/components/Slide.tsx","webpack://sirpryderi.github.io/./src/components/CalendlyEmbed.tsx","webpack://sirpryderi.github.io/./src/pages/meeting.tsx"],"sourcesContent":["import React from \"react\"\nimport {\n  faDiscord,\n  faGithub,\n  faGooglePlay,\n  faItchIo,\n} from \"@fortawesome/free-brands-svg-icons\"\nimport { faExternalLink } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport styled from \"styled-components\"\n\nconst StyledLink = styled.a`\n  color: #fff;\n  text-decoration: underline;\n  font-weight: 500;\n  display: inline-flex;\n  align-items: baseline;\n  gap: 0.4em;\n  padding: 0 .25rem;\n\n  &:hover, &:focus {\n    background-color: white;\n    color: #0a0e0c;\n    text-decoration: underline;\n    text-shadow: none;\n  }\n\n  &:active {\n    transform: translateY(2px) translateX(2px);\n  }\n\n  svg {\n    align-self: center;\n  }\n`\n\ntype ExternalLinkProps = {\n  text: string\n  href: string\n  icon?: \"github\" | \"google-play\" | \"discord\" | \"itch-io\" | \"link\"\n}\n\nconst iconMap = {\n  github: faGithub,\n  \"google-play\": faGooglePlay,\n  discord: faDiscord,\n  link: faExternalLink,\n  \"itch-io\": faItchIo\n}\n\nexport const ExternalLinkContainer = styled.div`\n  display: inline-flex;\n  gap: 0.5rem;\n`\n\nconst ExternalLink: React.FC<ExternalLinkProps> = ({\n  text,\n  href,\n  icon = \"link\",\n}) => (\n  <StyledLink href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {icon && iconMap[icon] && <FontAwesomeIcon icon={iconMap[icon]} />}\n    {text}\n  </StyledLink>\n)\n\nexport default ExternalLink\n","import React from \"react\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport styled from \"styled-components\"\nimport ExternalLink, { ExternalLinkContainer } from \"./ExternalLink\"\n\nconst Article = styled.article`\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 4rem 2rem 2rem 2rem;\n  color: white;\n  font-family: \"Oxanium\", sans-serif;\n\n  text-shadow: 0 0px 5px #0a0e0c;\n\n  @media (max-width: 768px) {\n    padding: 2rem 1rem;\n  }\n`\n\nconst shortcodes = { ExternalLink, ExternalLinkContainer }\n\nexport const ArticleTitle = styled.h1`\n  font-size: 3rem;\n  font-weight: 600;\n  margin-bottom: 2rem;\n  letter-spacing: 0.04em;\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`\n\nexport const ArticleMdx = ({ children }: { children: React.ReactNode }) => (\n  <MDXProvider components={shortcodes}>{children}</MDXProvider>\n)\n\nexport default Article\n","// components/Breadcrumbs.tsx\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\ninterface BreadcrumbItem {\n  title: string\n  url: string\n}\n\ninterface BreadcrumbsProps {\n  items: BreadcrumbItem[]\n}\n\nconst BreadcrumbsContainer = styled.nav`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 2rem;\n  font-size: 0.9rem;\n  font-family: monospace;\n  \n  @media (max-width: 768px) {\n    font-size: 0.8rem;\n    margin-bottom: 1.5rem;\n  }\n`\n\nconst BreadcrumbLink = styled(Link)`\n  color: #a0a0a0;\n  text-decoration: none;\n  \n  &:hover {\n    color: white;\n    text-decoration: underline;\n  }\n  \n  &:last-child {\n    color: white;\n    pointer-events: none;\n    \n    &:hover {\n      text-decoration: none;\n    }\n  }\n`\n\nconst Separator = styled.span`\n  color: #666;\n  user-select: none;\n`\n\nexport default function Breadcrumbs({ items }: BreadcrumbsProps) {\n  return (\n    <BreadcrumbsContainer aria-label=\"Breadcrumb\">\n      {items.map((item, index) => (\n        <React.Fragment key={item.url}>\n          <BreadcrumbLink to={item.url}>\n            {item.title}\n          </BreadcrumbLink>\n          {index < items.length - 1 && (\n            <Separator>//</Separator>\n          )}\n        </React.Fragment>\n      ))}\n    </BreadcrumbsContainer>\n  )\n}","import styled from \"styled-components\"\n\nconst Slide = styled.section<{ $fullSize?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  max-width: 1840px;\n  padding: 40px 200px;\n  margin: 0 auto;\n  justify-content: center;\n  min-height: ${(props) => (props.$fullSize ? \"100vh\" : \"auto\")};\n\n  // responsive breakpoints\n  @media (max-width: 768px) {\n    padding: 40px 20px;\n  }\n\n  h2 {\n    font-size: 4rem;\n    margin: 0;\n  }\n`\n\nexport default Slide\n","import React, { useEffect, useRef } from \"react\"\n\n// Extend the Window interface to include Calendly\ndeclare global {\n  interface Window {\n    Calendly?: {\n      initInlineWidget: (options: CalendlyOptions) => void\n      closePopupWidget: () => void\n      initPopupWidget: (options: CalendlyOptions) => void\n    }\n  }\n}\n\ninterface CalendlyOptions {\n  url: string\n  parentElement?: HTMLElement\n  prefill?: {\n    email?: string\n    firstName?: string\n    lastName?: string\n    name?: string\n    guests?: string[]\n    customAnswers?: Record<string, string>\n    date?: Date\n  }\n  utm?: {\n    utmCampaign?: string\n    utmSource?: string\n    utmMedium?: string\n    utmContent?: string\n    utmTerm?: string\n  }\n}\n\ninterface CalendlyEmbedProps {\n  /** Your Calendly scheduling URL */\n  url: string\n  /** Container height (default: '630px') */\n  height?: string\n  /** Container width (default: '100%') */\n  width?: string\n  /** Background color for the container */\n  backgroundColor?: string\n  /** Text color for the container */\n  textColor?: string\n  /** Primary color for the container */\n  primaryColor?: string\n  /** Border radius for the container */\n  borderRadius?: string\n  /** Custom CSS class name */\n  className?: string\n  /** Prefill form data */\n  prefill?: CalendlyOptions[\"prefill\"]\n  /** UTM parameters for tracking */\n  utm?: CalendlyOptions[\"utm\"]\n  /** Callback when widget loads */\n  onLoad?: () => void\n  /** Callback when an event is scheduled */\n  onEventScheduled?: (event: any) => void\n  /** Hide event type details (default: true) */\n  hideEventTypeDetails?: boolean\n}\n\nconst CalendlyEmbed: React.FC<CalendlyEmbedProps> = ({\n  url,\n  height = \"730px\",\n  width = \"100%\",\n  backgroundColor = \"ffffff\",\n  textColor = \"000000\",\n  primaryColor = \"3665a8\",\n  className = \"\",\n  prefill,\n  utm,\n  onLoad,\n  onEventScheduled,\n  hideEventTypeDetails = false,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const scriptLoadedRef = useRef(false)\n\n  useEffect(() => {\n    const loadCalendlyScript = () => {\n      if (scriptLoadedRef.current || window.Calendly) {\n        initializeWidget()\n        return\n      }\n\n      const script = document.createElement(\"script\")\n      script.src = \"https://assets.calendly.com/assets/external/widget.js\"\n      script.async = true\n      script.onload = () => {\n        scriptLoadedRef.current = true\n        initializeWidget()\n      }\n      document.head.appendChild(script)\n    }\n\n    const initializeWidget = () => {\n      if (!window.Calendly || !containerRef.current) return\n\n      // Clear any existing content\n      containerRef.current.innerHTML = \"\"\n\n      const urlWithParams = new URL(url)\n\n      urlWithParams.searchParams.set(\"embed_type\", \"Inline\")\n      urlWithParams.searchParams.set(\"embed_domain\", window.location.hostname)\n\n      if (hideEventTypeDetails) {\n        urlWithParams.searchParams.set(\"hide_event_type_details\", \"1\")\n      }\n      if (backgroundColor) {\n        urlWithParams.searchParams.set(\"background_color\", backgroundColor)\n      }\n      if (textColor) {\n        urlWithParams.searchParams.set(\"text_color\", textColor)\n      }\n      if (primaryColor) {\n        urlWithParams.searchParams.set(\"primary_color\", primaryColor)\n      }\n\n      window.Calendly.initInlineWidget({\n        url: urlWithParams.toString(),\n        parentElement: containerRef.current,\n        prefill,\n        utm,\n      })\n\n      // Set up event listeners if callbacks are provided\n      if (onLoad || onEventScheduled) {\n        window.addEventListener(\"message\", handleCalendlyEvents)\n      }\n\n      if (onLoad) {\n        onLoad()\n      }\n    }\n\n    const handleCalendlyEvents = (event: MessageEvent) => {\n      if (event.origin !== \"https://calendly.com\") return\n\n      if (event.data.event === \"calendly.event_scheduled\" && onEventScheduled) {\n        onEventScheduled(event.data)\n      }\n    }\n\n    loadCalendlyScript()\n\n    // Cleanup\n    return () => {\n      if (onLoad || onEventScheduled) {\n        window.removeEventListener(\"message\", handleCalendlyEvents)\n      }\n    }\n  }, [url, prefill, utm, onLoad, onEventScheduled])\n\n  const containerStyle: React.CSSProperties = {\n    width,\n    height,\n    overflow: \"hidden\",\n    colorScheme: \"light\",\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={`calendly-embed-container ${className}`.trim()}\n      style={containerStyle}\n      role=\"application\"\n      aria-label=\"Calendly scheduling widget\"\n    />\n  )\n}\n\nexport default CalendlyEmbed\n","import * as React from \"react\"\n\nimport { type PageProps } from \"gatsby\"\nimport { ArticleTitle } from \"../components/Article\"\nimport Breadcrumbs from \"../components/Breadcrumbs\"\nimport Layout from \"../components/Layout\"\nimport LayoutHead from \"../components/LayoutHead\"\nimport Slide from \"../components/Slide\"\nimport CalendlyEmbed from \"../components/CalendlyEmbed\"\n\nconst breadcrumbItems = [\n  { title: \"home\", url: \"/\" },\n  { title: \"meeting\", url: \"/meeting\" },\n]\n\nconst MeetingPage: React.FC<PageProps<null>> = ({}) => {\n  return (\n    <Layout>\n      <Slide $fullSize>\n        <div>\n          <Breadcrumbs items={breadcrumbItems} />\n          <ArticleTitle>Let's chat</ArticleTitle>\n        </div>\n        <CalendlyEmbed\n          url=\"https://calendly.com/vittorio-iocolano/30min\"\n          backgroundColor=\"0a0e0c\"\n          textColor=\"ffffff\"\n          primaryColor=\"ffffff\"\n          hideEventTypeDetails={false}\n        />\n      </Slide>\n    </Layout>\n  )\n}\n\nexport default MeetingPage\n\nexport const Head = LayoutHead\n"],"names":["StyledLink","styled","a","iconMap","github","faGithub","faGooglePlay","discord","faDiscord","link","faExternalLink","faItchIo","ExternalLinkContainer","div","_ref","text","href","icon","React","target","rel","FontAwesomeIcon","Article","article","shortcodes","ExternalLink","ArticleTitle","h1","ArticleMdx","children","MDXProvider","components","BreadcrumbsContainer","nav","BreadcrumbLink","Link","Separator","span","Breadcrumbs","items","map","item","index","key","url","to","title","length","Slide","section","props","$fullSize","height","width","backgroundColor","textColor","primaryColor","className","prefill","utm","onLoad","onEventScheduled","hideEventTypeDetails","containerRef","useRef","scriptLoadedRef","useEffect","initializeWidget","window","Calendly","current","innerHTML","urlWithParams","URL","searchParams","set","location","hostname","initInlineWidget","toString","parentElement","addEventListener","handleCalendlyEvents","event","origin","data","loadCalendlyScript","script","document","createElement","src","async","onload","head","appendChild","removeEventListener","containerStyle","overflow","colorScheme","ref","trim","style","role","breadcrumbItems","Layout","CalendlyEmbed","Head","LayoutHead"],"sourceRoot":""}